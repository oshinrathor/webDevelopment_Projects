trigger:
- main  # Trigger the pipeline when changes are pushed to the 'main' branch

# Use an Ubuntu image for the build agent
pool:
  vmImage: 'ubuntu-latest'

# Set up the steps for the pipeline
steps:

# Step 1: Checkout the code from GitHub using the established service connection
- checkout: self  # This tells Azure DevOps to fetch the code from the GitHub repository automatically

# Step 2: Navigate to the correct directory ('counter') where the project is located
- script: |
    echo "Navigating to the project directory..."
    cd counter
    echo "Current directory:"
    pwd
  displayName: 'Navigate to the Project Directory'

# Step 3: Validate HTML, CSS, and JS files (Optional)
- script: |
    echo "Validating HTML, CSS, and JS files..."
    ls -al  # List all the files to ensure they are correct
  displayName: 'Validate Code (Optional)'

# Step 4: Package the project into a tarball (archive) and store it in the artifact staging directory
- script: |
    echo "Packaging the project..."
    mkdir -p $(Build.ArtifactStagingDirectory)  # Create the artifact staging directory if not already created
    tar -czf $(Build.ArtifactStagingDirectory)/counter-project.tar.gz *
    echo "Project packaged into counter-project.tar.gz"
  displayName: 'Package the Code'

# Step 5: Publish the packaged code as a build artifact
- task: PublishBuildArtifacts@1  # This task publishes the artifact (the packaged code)
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)/counter-project.tar.gz'  # Correct path to the artifact
    artifactName: 'counter-artifact'
    publishLocation: 'Container'
  displayName: 'Publish Artifact'
